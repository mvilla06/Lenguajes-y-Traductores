Terminals unused in grammar

   REQ
   SHL
   SHR
   ENDL


Grammar

    0 $accept: Programa $end

    1 $@1: %empty

    2 Programa: var $@1 met main

    3 $@2: %empty

    4 main: MAIN $@2 f

    5 var: tipo ID init mv ';' var

    6 $@3: %empty

    7 $@4: %empty

    8 var: tipo ID $@3 arr2 $@4 ';' var
    9    | %empty

   10 tipo: TINT
   11     | TFLOAT

   12 mv: mv ',' ID init
   13   | %empty

   14 $@5: %empty

   15 init: '=' $@5 INT

   16 $@6: %empty

   17 init: '=' $@6 FLOAT
   18     | %empty

   19 $@7: %empty

   20 $@8: %empty

   21 met: VOID ID $@7 f $@8 met
   22    | %empty

   23 f: '(' ')' bloque

   24 bloque: '{' s '}'

   25 s: stat ';' s
   26  | control s
   27  | %empty

   28 sob: stat ';'
   29    | bloque
   30    | control

   31 stat: asign
   32     | ID '(' ')'
   33     | COUT '(' mensaje ')'
   34     | CIN '(' ide ')'

   35 asign: ide asig ea
   36      | ide incdec

   37 $@9: %empty

   38 control: WHILE temp '(' el ')' $@9 sob

   39 $@10: %empty

   40 control: DO temp sob WHILE '(' el ')' $@10 ';'

   41 $@11: %empty

   42 $@12: %empty

   43 control: FOR '(' asign ';' el $@11 ';' asign ')' $@12 sob
   44        | IF '(' el ')' temp2 sob

   45 $@13: %empty

   46 control: IF '(' el ')' temp2 sob ELSE $@13 sob

   47 temp2: %empty

   48 temp: %empty

   49 mensaje: ea
   50        | STRING

   51 incdec: PP
   52       | MM

   53 asig: '='
   54     | PEQ
   55     | LEQ
   56     | MEQ
   57     | DEQ

   58 ea: x
   59   | ea '+' x
   60   | ea '-' x

   61 x: y
   62  | x '*' y
   63  | x '/' y
   64  | x '%' y

   65 y: ide
   66  | n
   67  | '(' ea ')'

   68 n: INT
   69  | FLOAT

   70 el: z
   71   | el OR z

   72 z: a
   73  | z AND a

   74 a: '!' b
   75  | b

   76 b: ea comp ea
   77  | '(' el ')'

   78 comp: EQ
   79     | NEQ
   80     | '>'
   81     | '<'
   82     | GEQ
   83     | LEQ

   84 $@14: %empty

   85 arr2: '[' INT ']' $@14 arr2
   86     | '[' INT ']'

   87 ide: ID

   88 $@15: %empty

   89 ide: ID $@15 arr

   90 @16: %empty

   91 arr: '[' ea ']' @16 arr
   92    | '[' ea ']'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 74
'%' (37) 64
'(' (40) 23 32 33 34 38 40 43 44 46 67 77
')' (41) 23 32 33 34 38 40 43 44 46 67 77
'*' (42) 62
'+' (43) 59
',' (44) 12
'-' (45) 60
'/' (47) 63
';' (59) 5 8 25 28 40 43
'<' (60) 81
'=' (61) 15 17 53
'>' (62) 80
'[' (91) 85 86 91 92
']' (93) 85 86 91 92
'{' (123) 24
'}' (125) 24
error (256)
VOID (258) 21
MAIN (259) 4
ID (260) 5 8 12 21 32 87 89
INT (261) 15 68 85 86
FLOAT (262) 17 69
STRING (263) 50
TFLOAT (264) 11
TINT (265) 10
OR (266) 71
AND (267) 73
EQ (268) 78
NEQ (269) 79
GEQ (270) 82
LEQ (271) 55 83
PEQ (272) 54
REQ (273)
MEQ (274) 56
DEQ (275) 57
PP (276) 51
MM (277) 52
SHL (278)
SHR (279)
IF (280) 44 46
ELSE (281) 46
WHILE (282) 38 40
DO (283) 40
FOR (284) 43
CIN (285) 34
ENDL (286)
COUT (287) 33


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
Programa (51)
    on left: 2, on right: 0
$@1 (52)
    on left: 1, on right: 2
main (53)
    on left: 4, on right: 2
$@2 (54)
    on left: 3, on right: 4
var (55)
    on left: 5 8 9, on right: 2 5 8
$@3 (56)
    on left: 6, on right: 8
$@4 (57)
    on left: 7, on right: 8
tipo (58)
    on left: 10 11, on right: 5 8
mv (59)
    on left: 12 13, on right: 5 12
init (60)
    on left: 15 17 18, on right: 5 12
$@5 (61)
    on left: 14, on right: 15
$@6 (62)
    on left: 16, on right: 17
met (63)
    on left: 21 22, on right: 2 21
$@7 (64)
    on left: 19, on right: 21
$@8 (65)
    on left: 20, on right: 21
f (66)
    on left: 23, on right: 4 21
bloque (67)
    on left: 24, on right: 23 29
s (68)
    on left: 25 26 27, on right: 24 25 26
sob (69)
    on left: 28 29 30, on right: 38 40 43 44 46
stat (70)
    on left: 31 32 33 34, on right: 25 28
asign (71)
    on left: 35 36, on right: 31 43
control (72)
    on left: 38 40 43 44 46, on right: 26 30
$@9 (73)
    on left: 37, on right: 38
$@10 (74)
    on left: 39, on right: 40
$@11 (75)
    on left: 41, on right: 43
$@12 (76)
    on left: 42, on right: 43
$@13 (77)
    on left: 45, on right: 46
temp2 (78)
    on left: 47, on right: 44 46
temp (79)
    on left: 48, on right: 38 40
mensaje (80)
    on left: 49 50, on right: 33
incdec (81)
    on left: 51 52, on right: 36
asig (82)
    on left: 53 54 55 56 57, on right: 35
ea (83)
    on left: 58 59 60, on right: 35 49 59 60 67 76 91 92
x (84)
    on left: 61 62 63 64, on right: 58 59 60 62 63 64
y (85)
    on left: 65 66 67, on right: 61 62 63 64
n (86)
    on left: 68 69, on right: 66
el (87)
    on left: 70 71, on right: 38 40 43 44 46 71 77
z (88)
    on left: 72 73, on right: 70 71 73
a (89)
    on left: 74 75, on right: 72 73
b (90)
    on left: 76 77, on right: 74 75
comp (91)
    on left: 78 79 80 81 82 83, on right: 76
arr2 (92)
    on left: 85 86, on right: 8 85
$@14 (93)
    on left: 84, on right: 85
ide (94)
    on left: 87 89, on right: 34 35 36 65
$@15 (95)
    on left: 88, on right: 89
arr (96)
    on left: 91 92, on right: 89 91
@16 (97)
    on left: 90, on right: 91


State 0

    0 $accept: . Programa $end

    TFLOAT  shift, and go to state 1
    TINT    shift, and go to state 2

    $default  reduce using rule 9 (var)

    Programa  go to state 3
    var       go to state 4
    tipo      go to state 5


State 1

   11 tipo: TFLOAT .

    $default  reduce using rule 11 (tipo)


State 2

   10 tipo: TINT .

    $default  reduce using rule 10 (tipo)


State 3

    0 $accept: Programa . $end

    $end  shift, and go to state 6


State 4

    2 Programa: var . $@1 met main

    $default  reduce using rule 1 ($@1)

    $@1  go to state 7


State 5

    5 var: tipo . ID init mv ';' var
    8    | tipo . ID $@3 arr2 $@4 ';' var

    ID  shift, and go to state 8


State 6

    0 $accept: Programa $end .

    $default  accept


State 7

    2 Programa: var $@1 . met main

    VOID  shift, and go to state 9

    $default  reduce using rule 22 (met)

    met  go to state 10


State 8

    5 var: tipo ID . init mv ';' var
    8    | tipo ID . $@3 arr2 $@4 ';' var

    '='  shift, and go to state 11

    '['       reduce using rule 6 ($@3)
    $default  reduce using rule 18 (init)

    $@3   go to state 12
    init  go to state 13


State 9

   21 met: VOID . ID $@7 f $@8 met

    ID  shift, and go to state 14


State 10

    2 Programa: var $@1 met . main

    MAIN  shift, and go to state 15

    main  go to state 16


State 11

   15 init: '=' . $@5 INT
   17     | '=' . $@6 FLOAT

    FLOAT     reduce using rule 16 ($@6)
    $default  reduce using rule 14 ($@5)

    $@5  go to state 17
    $@6  go to state 18


State 12

    8 var: tipo ID $@3 . arr2 $@4 ';' var

    '['  shift, and go to state 19

    arr2  go to state 20


State 13

    5 var: tipo ID init . mv ';' var

    $default  reduce using rule 13 (mv)

    mv  go to state 21


State 14

   21 met: VOID ID . $@7 f $@8 met

    $default  reduce using rule 19 ($@7)

    $@7  go to state 22


State 15

    4 main: MAIN . $@2 f

    $default  reduce using rule 3 ($@2)

    $@2  go to state 23


State 16

    2 Programa: var $@1 met main .

    $default  reduce using rule 2 (Programa)


State 17

   15 init: '=' $@5 . INT

    INT  shift, and go to state 24


State 18

   17 init: '=' $@6 . FLOAT

    FLOAT  shift, and go to state 25


State 19

   85 arr2: '[' . INT ']' $@14 arr2
   86     | '[' . INT ']'

    INT  shift, and go to state 26


State 20

    8 var: tipo ID $@3 arr2 . $@4 ';' var

    $default  reduce using rule 7 ($@4)

    $@4  go to state 27


State 21

    5 var: tipo ID init mv . ';' var
   12 mv: mv . ',' ID init

    ';'  shift, and go to state 28
    ','  shift, and go to state 29


State 22

   21 met: VOID ID $@7 . f $@8 met

    '('  shift, and go to state 30

    f  go to state 31


State 23

    4 main: MAIN $@2 . f

    '('  shift, and go to state 30

    f  go to state 32


State 24

   15 init: '=' $@5 INT .

    $default  reduce using rule 15 (init)


State 25

   17 init: '=' $@6 FLOAT .

    $default  reduce using rule 17 (init)


State 26

   85 arr2: '[' INT . ']' $@14 arr2
   86     | '[' INT . ']'

    ']'  shift, and go to state 33


State 27

    8 var: tipo ID $@3 arr2 $@4 . ';' var

    ';'  shift, and go to state 34


State 28

    5 var: tipo ID init mv ';' . var

    TFLOAT  shift, and go to state 1
    TINT    shift, and go to state 2

    $default  reduce using rule 9 (var)

    var   go to state 35
    tipo  go to state 5


State 29

   12 mv: mv ',' . ID init

    ID  shift, and go to state 36


State 30

   23 f: '(' . ')' bloque

    ')'  shift, and go to state 37


State 31

   21 met: VOID ID $@7 f . $@8 met

    $default  reduce using rule 20 ($@8)

    $@8  go to state 38


State 32

    4 main: MAIN $@2 f .

    $default  reduce using rule 4 (main)


State 33

   85 arr2: '[' INT ']' . $@14 arr2
   86     | '[' INT ']' .

    ';'       reduce using rule 86 (arr2)
    $default  reduce using rule 84 ($@14)

    $@14  go to state 39


State 34

    8 var: tipo ID $@3 arr2 $@4 ';' . var

    TFLOAT  shift, and go to state 1
    TINT    shift, and go to state 2

    $default  reduce using rule 9 (var)

    var   go to state 40
    tipo  go to state 5


State 35

    5 var: tipo ID init mv ';' var .

    $default  reduce using rule 5 (var)


State 36

   12 mv: mv ',' ID . init

    '='  shift, and go to state 11

    $default  reduce using rule 18 (init)

    init  go to state 41


State 37

   23 f: '(' ')' . bloque

    '{'  shift, and go to state 42

    bloque  go to state 43


State 38

   21 met: VOID ID $@7 f $@8 . met

    VOID  shift, and go to state 9

    $default  reduce using rule 22 (met)

    met  go to state 44


State 39

   85 arr2: '[' INT ']' $@14 . arr2

    '['  shift, and go to state 19

    arr2  go to state 45


State 40

    8 var: tipo ID $@3 arr2 $@4 ';' var .

    $default  reduce using rule 8 (var)


State 41

   12 mv: mv ',' ID init .

    $default  reduce using rule 12 (mv)


State 42

   24 bloque: '{' . s '}'

    ID     shift, and go to state 46
    IF     shift, and go to state 47
    WHILE  shift, and go to state 48
    DO     shift, and go to state 49
    FOR    shift, and go to state 50
    CIN    shift, and go to state 51
    COUT   shift, and go to state 52

    $default  reduce using rule 27 (s)

    s        go to state 53
    stat     go to state 54
    asign    go to state 55
    control  go to state 56
    ide      go to state 57


State 43

   23 f: '(' ')' bloque .

    $default  reduce using rule 23 (f)


State 44

   21 met: VOID ID $@7 f $@8 met .

    $default  reduce using rule 21 (met)


State 45

   85 arr2: '[' INT ']' $@14 arr2 .

    $default  reduce using rule 85 (arr2)


State 46

   32 stat: ID . '(' ')'
   87 ide: ID .
   89    | ID . $@15 arr

    '('  shift, and go to state 58

    '['       reduce using rule 88 ($@15)
    $default  reduce using rule 87 (ide)

    $@15  go to state 59


State 47

   44 control: IF . '(' el ')' temp2 sob
   46        | IF . '(' el ')' temp2 sob ELSE $@13 sob

    '('  shift, and go to state 60


State 48

   38 control: WHILE . temp '(' el ')' $@9 sob

    $default  reduce using rule 48 (temp)

    temp  go to state 61


State 49

   40 control: DO . temp sob WHILE '(' el ')' $@10 ';'

    $default  reduce using rule 48 (temp)

    temp  go to state 62


State 50

   43 control: FOR . '(' asign ';' el $@11 ';' asign ')' $@12 sob

    '('  shift, and go to state 63


State 51

   34 stat: CIN . '(' ide ')'

    '('  shift, and go to state 64


State 52

   33 stat: COUT . '(' mensaje ')'

    '('  shift, and go to state 65


State 53

   24 bloque: '{' s . '}'

    '}'  shift, and go to state 66


State 54

   25 s: stat . ';' s

    ';'  shift, and go to state 67


State 55

   31 stat: asign .

    $default  reduce using rule 31 (stat)


State 56

   26 s: control . s

    ID     shift, and go to state 46
    IF     shift, and go to state 47
    WHILE  shift, and go to state 48
    DO     shift, and go to state 49
    FOR    shift, and go to state 50
    CIN    shift, and go to state 51
    COUT   shift, and go to state 52

    $default  reduce using rule 27 (s)

    s        go to state 68
    stat     go to state 54
    asign    go to state 55
    control  go to state 56
    ide      go to state 57


State 57

   35 asign: ide . asig ea
   36      | ide . incdec

    LEQ  shift, and go to state 69
    PEQ  shift, and go to state 70
    MEQ  shift, and go to state 71
    DEQ  shift, and go to state 72
    PP   shift, and go to state 73
    MM   shift, and go to state 74
    '='  shift, and go to state 75

    incdec  go to state 76
    asig    go to state 77


State 58

   32 stat: ID '(' . ')'

    ')'  shift, and go to state 78


State 59

   89 ide: ID $@15 . arr

    '['  shift, and go to state 79

    arr  go to state 80


State 60

   44 control: IF '(' . el ')' temp2 sob
   46        | IF '(' . el ')' temp2 sob ELSE $@13 sob

    ID     shift, and go to state 81
    INT    shift, and go to state 82
    FLOAT  shift, and go to state 83
    '('    shift, and go to state 84
    '!'    shift, and go to state 85

    ea   go to state 86
    x    go to state 87
    y    go to state 88
    n    go to state 89
    el   go to state 90
    z    go to state 91
    a    go to state 92
    b    go to state 93
    ide  go to state 94


State 61

   38 control: WHILE temp . '(' el ')' $@9 sob

    '('  shift, and go to state 95


State 62

   40 control: DO temp . sob WHILE '(' el ')' $@10 ';'

    ID     shift, and go to state 46
    IF     shift, and go to state 47
    WHILE  shift, and go to state 48
    DO     shift, and go to state 49
    FOR    shift, and go to state 50
    CIN    shift, and go to state 51
    COUT   shift, and go to state 52
    '{'    shift, and go to state 42

    bloque   go to state 96
    sob      go to state 97
    stat     go to state 98
    asign    go to state 55
    control  go to state 99
    ide      go to state 57


State 63

   43 control: FOR '(' . asign ';' el $@11 ';' asign ')' $@12 sob

    ID  shift, and go to state 81

    asign  go to state 100
    ide    go to state 57


State 64

   34 stat: CIN '(' . ide ')'

    ID  shift, and go to state 81

    ide  go to state 101


State 65

   33 stat: COUT '(' . mensaje ')'

    ID      shift, and go to state 81
    INT     shift, and go to state 82
    FLOAT   shift, and go to state 83
    STRING  shift, and go to state 102
    '('     shift, and go to state 103

    mensaje  go to state 104
    ea       go to state 105
    x        go to state 87
    y        go to state 88
    n        go to state 89
    ide      go to state 94


State 66

   24 bloque: '{' s '}' .

    $default  reduce using rule 24 (bloque)


State 67

   25 s: stat ';' . s

    ID     shift, and go to state 46
    IF     shift, and go to state 47
    WHILE  shift, and go to state 48
    DO     shift, and go to state 49
    FOR    shift, and go to state 50
    CIN    shift, and go to state 51
    COUT   shift, and go to state 52

    $default  reduce using rule 27 (s)

    s        go to state 106
    stat     go to state 54
    asign    go to state 55
    control  go to state 56
    ide      go to state 57


State 68

   26 s: control s .

    $default  reduce using rule 26 (s)


State 69

   55 asig: LEQ .

    $default  reduce using rule 55 (asig)


State 70

   54 asig: PEQ .

    $default  reduce using rule 54 (asig)


State 71

   56 asig: MEQ .

    $default  reduce using rule 56 (asig)


State 72

   57 asig: DEQ .

    $default  reduce using rule 57 (asig)


State 73

   51 incdec: PP .

    $default  reduce using rule 51 (incdec)


State 74

   52 incdec: MM .

    $default  reduce using rule 52 (incdec)


State 75

   53 asig: '=' .

    $default  reduce using rule 53 (asig)


State 76

   36 asign: ide incdec .

    $default  reduce using rule 36 (asign)


State 77

   35 asign: ide asig . ea

    ID     shift, and go to state 81
    INT    shift, and go to state 82
    FLOAT  shift, and go to state 83
    '('    shift, and go to state 103

    ea   go to state 107
    x    go to state 87
    y    go to state 88
    n    go to state 89
    ide  go to state 94


State 78

   32 stat: ID '(' ')' .

    $default  reduce using rule 32 (stat)


State 79

   91 arr: '[' . ea ']' @16 arr
   92    | '[' . ea ']'

    ID     shift, and go to state 81
    INT    shift, and go to state 82
    FLOAT  shift, and go to state 83
    '('    shift, and go to state 103

    ea   go to state 108
    x    go to state 87
    y    go to state 88
    n    go to state 89
    ide  go to state 94


State 80

   89 ide: ID $@15 arr .

    $default  reduce using rule 89 (ide)


State 81

   87 ide: ID .
   89    | ID . $@15 arr

    '['       reduce using rule 88 ($@15)
    $default  reduce using rule 87 (ide)

    $@15  go to state 59


State 82

   68 n: INT .

    $default  reduce using rule 68 (n)


State 83

   69 n: FLOAT .

    $default  reduce using rule 69 (n)


State 84

   67 y: '(' . ea ')'
   77 b: '(' . el ')'

    ID     shift, and go to state 81
    INT    shift, and go to state 82
    FLOAT  shift, and go to state 83
    '('    shift, and go to state 84
    '!'    shift, and go to state 85

    ea   go to state 109
    x    go to state 87
    y    go to state 88
    n    go to state 89
    el   go to state 110
    z    go to state 91
    a    go to state 92
    b    go to state 93
    ide  go to state 94


State 85

   74 a: '!' . b

    ID     shift, and go to state 81
    INT    shift, and go to state 82
    FLOAT  shift, and go to state 83
    '('    shift, and go to state 84

    ea   go to state 86
    x    go to state 87
    y    go to state 88
    n    go to state 89
    b    go to state 111
    ide  go to state 94


State 86

   59 ea: ea . '+' x
   60   | ea . '-' x
   76 b: ea . comp ea

    EQ   shift, and go to state 112
    NEQ  shift, and go to state 113
    GEQ  shift, and go to state 114
    LEQ  shift, and go to state 115
    '+'  shift, and go to state 116
    '-'  shift, and go to state 117
    '>'  shift, and go to state 118
    '<'  shift, and go to state 119

    comp  go to state 120


State 87

   58 ea: x .
   62 x: x . '*' y
   63  | x . '/' y
   64  | x . '%' y

    '*'  shift, and go to state 121
    '/'  shift, and go to state 122
    '%'  shift, and go to state 123

    $default  reduce using rule 58 (ea)


State 88

   61 x: y .

    $default  reduce using rule 61 (x)


State 89

   66 y: n .

    $default  reduce using rule 66 (y)


State 90

   44 control: IF '(' el . ')' temp2 sob
   46        | IF '(' el . ')' temp2 sob ELSE $@13 sob
   71 el: el . OR z

    OR   shift, and go to state 124
    ')'  shift, and go to state 125


State 91

   70 el: z .
   73 z: z . AND a

    AND  shift, and go to state 126

    $default  reduce using rule 70 (el)


State 92

   72 z: a .

    $default  reduce using rule 72 (z)


State 93

   75 a: b .

    $default  reduce using rule 75 (a)


State 94

   65 y: ide .

    $default  reduce using rule 65 (y)


State 95

   38 control: WHILE temp '(' . el ')' $@9 sob

    ID     shift, and go to state 81
    INT    shift, and go to state 82
    FLOAT  shift, and go to state 83
    '('    shift, and go to state 84
    '!'    shift, and go to state 85

    ea   go to state 86
    x    go to state 87
    y    go to state 88
    n    go to state 89
    el   go to state 127
    z    go to state 91
    a    go to state 92
    b    go to state 93
    ide  go to state 94


State 96

   29 sob: bloque .

    $default  reduce using rule 29 (sob)


State 97

   40 control: DO temp sob . WHILE '(' el ')' $@10 ';'

    WHILE  shift, and go to state 128


State 98

   28 sob: stat . ';'

    ';'  shift, and go to state 129


State 99

   30 sob: control .

    $default  reduce using rule 30 (sob)


State 100

   43 control: FOR '(' asign . ';' el $@11 ';' asign ')' $@12 sob

    ';'  shift, and go to state 130


State 101

   34 stat: CIN '(' ide . ')'

    ')'  shift, and go to state 131


State 102

   50 mensaje: STRING .

    $default  reduce using rule 50 (mensaje)


State 103

   67 y: '(' . ea ')'

    ID     shift, and go to state 81
    INT    shift, and go to state 82
    FLOAT  shift, and go to state 83
    '('    shift, and go to state 103

    ea   go to state 132
    x    go to state 87
    y    go to state 88
    n    go to state 89
    ide  go to state 94


State 104

   33 stat: COUT '(' mensaje . ')'

    ')'  shift, and go to state 133


State 105

   49 mensaje: ea .
   59 ea: ea . '+' x
   60   | ea . '-' x

    '+'  shift, and go to state 116
    '-'  shift, and go to state 117

    $default  reduce using rule 49 (mensaje)


State 106

   25 s: stat ';' s .

    $default  reduce using rule 25 (s)


State 107

   35 asign: ide asig ea .
   59 ea: ea . '+' x
   60   | ea . '-' x

    '+'  shift, and go to state 116
    '-'  shift, and go to state 117

    $default  reduce using rule 35 (asign)


State 108

   59 ea: ea . '+' x
   60   | ea . '-' x
   91 arr: '[' ea . ']' @16 arr
   92    | '[' ea . ']'

    '+'  shift, and go to state 116
    '-'  shift, and go to state 117
    ']'  shift, and go to state 134


State 109

   59 ea: ea . '+' x
   60   | ea . '-' x
   67 y: '(' ea . ')'
   76 b: ea . comp ea

    EQ   shift, and go to state 112
    NEQ  shift, and go to state 113
    GEQ  shift, and go to state 114
    LEQ  shift, and go to state 115
    ')'  shift, and go to state 135
    '+'  shift, and go to state 116
    '-'  shift, and go to state 117
    '>'  shift, and go to state 118
    '<'  shift, and go to state 119

    comp  go to state 120


State 110

   71 el: el . OR z
   77 b: '(' el . ')'

    OR   shift, and go to state 124
    ')'  shift, and go to state 136


State 111

   74 a: '!' b .

    $default  reduce using rule 74 (a)


State 112

   78 comp: EQ .

    $default  reduce using rule 78 (comp)


State 113

   79 comp: NEQ .

    $default  reduce using rule 79 (comp)


State 114

   82 comp: GEQ .

    $default  reduce using rule 82 (comp)


State 115

   83 comp: LEQ .

    $default  reduce using rule 83 (comp)


State 116

   59 ea: ea '+' . x

    ID     shift, and go to state 81
    INT    shift, and go to state 82
    FLOAT  shift, and go to state 83
    '('    shift, and go to state 103

    x    go to state 137
    y    go to state 88
    n    go to state 89
    ide  go to state 94


State 117

   60 ea: ea '-' . x

    ID     shift, and go to state 81
    INT    shift, and go to state 82
    FLOAT  shift, and go to state 83
    '('    shift, and go to state 103

    x    go to state 138
    y    go to state 88
    n    go to state 89
    ide  go to state 94


State 118

   80 comp: '>' .

    $default  reduce using rule 80 (comp)


State 119

   81 comp: '<' .

    $default  reduce using rule 81 (comp)


State 120

   76 b: ea comp . ea

    ID     shift, and go to state 81
    INT    shift, and go to state 82
    FLOAT  shift, and go to state 83
    '('    shift, and go to state 103

    ea   go to state 139
    x    go to state 87
    y    go to state 88
    n    go to state 89
    ide  go to state 94


State 121

   62 x: x '*' . y

    ID     shift, and go to state 81
    INT    shift, and go to state 82
    FLOAT  shift, and go to state 83
    '('    shift, and go to state 103

    y    go to state 140
    n    go to state 89
    ide  go to state 94


State 122

   63 x: x '/' . y

    ID     shift, and go to state 81
    INT    shift, and go to state 82
    FLOAT  shift, and go to state 83
    '('    shift, and go to state 103

    y    go to state 141
    n    go to state 89
    ide  go to state 94


State 123

   64 x: x '%' . y

    ID     shift, and go to state 81
    INT    shift, and go to state 82
    FLOAT  shift, and go to state 83
    '('    shift, and go to state 103

    y    go to state 142
    n    go to state 89
    ide  go to state 94


State 124

   71 el: el OR . z

    ID     shift, and go to state 81
    INT    shift, and go to state 82
    FLOAT  shift, and go to state 83
    '('    shift, and go to state 84
    '!'    shift, and go to state 85

    ea   go to state 86
    x    go to state 87
    y    go to state 88
    n    go to state 89
    z    go to state 143
    a    go to state 92
    b    go to state 93
    ide  go to state 94


State 125

   44 control: IF '(' el ')' . temp2 sob
   46        | IF '(' el ')' . temp2 sob ELSE $@13 sob

    $default  reduce using rule 47 (temp2)

    temp2  go to state 144


State 126

   73 z: z AND . a

    ID     shift, and go to state 81
    INT    shift, and go to state 82
    FLOAT  shift, and go to state 83
    '('    shift, and go to state 84
    '!'    shift, and go to state 85

    ea   go to state 86
    x    go to state 87
    y    go to state 88
    n    go to state 89
    a    go to state 145
    b    go to state 93
    ide  go to state 94


State 127

   38 control: WHILE temp '(' el . ')' $@9 sob
   71 el: el . OR z

    OR   shift, and go to state 124
    ')'  shift, and go to state 146


State 128

   40 control: DO temp sob WHILE . '(' el ')' $@10 ';'

    '('  shift, and go to state 147


State 129

   28 sob: stat ';' .

    $default  reduce using rule 28 (sob)


State 130

   43 control: FOR '(' asign ';' . el $@11 ';' asign ')' $@12 sob

    ID     shift, and go to state 81
    INT    shift, and go to state 82
    FLOAT  shift, and go to state 83
    '('    shift, and go to state 84
    '!'    shift, and go to state 85

    ea   go to state 86
    x    go to state 87
    y    go to state 88
    n    go to state 89
    el   go to state 148
    z    go to state 91
    a    go to state 92
    b    go to state 93
    ide  go to state 94


State 131

   34 stat: CIN '(' ide ')' .

    $default  reduce using rule 34 (stat)


State 132

   59 ea: ea . '+' x
   60   | ea . '-' x
   67 y: '(' ea . ')'

    ')'  shift, and go to state 135
    '+'  shift, and go to state 116
    '-'  shift, and go to state 117


State 133

   33 stat: COUT '(' mensaje ')' .

    $default  reduce using rule 33 (stat)


State 134

   91 arr: '[' ea ']' . @16 arr
   92    | '[' ea ']' .

    '['       reduce using rule 90 (@16)
    $default  reduce using rule 92 (arr)

    @16  go to state 149


State 135

   67 y: '(' ea ')' .

    $default  reduce using rule 67 (y)


State 136

   77 b: '(' el ')' .

    $default  reduce using rule 77 (b)


State 137

   59 ea: ea '+' x .
   62 x: x . '*' y
   63  | x . '/' y
   64  | x . '%' y

    '*'  shift, and go to state 121
    '/'  shift, and go to state 122
    '%'  shift, and go to state 123

    $default  reduce using rule 59 (ea)


State 138

   60 ea: ea '-' x .
   62 x: x . '*' y
   63  | x . '/' y
   64  | x . '%' y

    '*'  shift, and go to state 121
    '/'  shift, and go to state 122
    '%'  shift, and go to state 123

    $default  reduce using rule 60 (ea)


State 139

   59 ea: ea . '+' x
   60   | ea . '-' x
   76 b: ea comp ea .

    '+'  shift, and go to state 116
    '-'  shift, and go to state 117

    $default  reduce using rule 76 (b)


State 140

   62 x: x '*' y .

    $default  reduce using rule 62 (x)


State 141

   63 x: x '/' y .

    $default  reduce using rule 63 (x)


State 142

   64 x: x '%' y .

    $default  reduce using rule 64 (x)


State 143

   71 el: el OR z .
   73 z: z . AND a

    AND  shift, and go to state 126

    $default  reduce using rule 71 (el)


State 144

   44 control: IF '(' el ')' temp2 . sob
   46        | IF '(' el ')' temp2 . sob ELSE $@13 sob

    ID     shift, and go to state 46
    IF     shift, and go to state 47
    WHILE  shift, and go to state 48
    DO     shift, and go to state 49
    FOR    shift, and go to state 50
    CIN    shift, and go to state 51
    COUT   shift, and go to state 52
    '{'    shift, and go to state 42

    bloque   go to state 96
    sob      go to state 150
    stat     go to state 98
    asign    go to state 55
    control  go to state 99
    ide      go to state 57


State 145

   73 z: z AND a .

    $default  reduce using rule 73 (z)


State 146

   38 control: WHILE temp '(' el ')' . $@9 sob

    $default  reduce using rule 37 ($@9)

    $@9  go to state 151


State 147

   40 control: DO temp sob WHILE '(' . el ')' $@10 ';'

    ID     shift, and go to state 81
    INT    shift, and go to state 82
    FLOAT  shift, and go to state 83
    '('    shift, and go to state 84
    '!'    shift, and go to state 85

    ea   go to state 86
    x    go to state 87
    y    go to state 88
    n    go to state 89
    el   go to state 152
    z    go to state 91
    a    go to state 92
    b    go to state 93
    ide  go to state 94


State 148

   43 control: FOR '(' asign ';' el . $@11 ';' asign ')' $@12 sob
   71 el: el . OR z

    OR  shift, and go to state 124

    $default  reduce using rule 41 ($@11)

    $@11  go to state 153


State 149

   91 arr: '[' ea ']' @16 . arr

    '['  shift, and go to state 79

    arr  go to state 154


State 150

   44 control: IF '(' el ')' temp2 sob .
   46        | IF '(' el ')' temp2 sob . ELSE $@13 sob

    ELSE  shift, and go to state 155

    $default  reduce using rule 44 (control)


State 151

   38 control: WHILE temp '(' el ')' $@9 . sob

    ID     shift, and go to state 46
    IF     shift, and go to state 47
    WHILE  shift, and go to state 48
    DO     shift, and go to state 49
    FOR    shift, and go to state 50
    CIN    shift, and go to state 51
    COUT   shift, and go to state 52
    '{'    shift, and go to state 42

    bloque   go to state 96
    sob      go to state 156
    stat     go to state 98
    asign    go to state 55
    control  go to state 99
    ide      go to state 57


State 152

   40 control: DO temp sob WHILE '(' el . ')' $@10 ';'
   71 el: el . OR z

    OR   shift, and go to state 124
    ')'  shift, and go to state 157


State 153

   43 control: FOR '(' asign ';' el $@11 . ';' asign ')' $@12 sob

    ';'  shift, and go to state 158


State 154

   91 arr: '[' ea ']' @16 arr .

    $default  reduce using rule 91 (arr)


State 155

   46 control: IF '(' el ')' temp2 sob ELSE . $@13 sob

    $default  reduce using rule 45 ($@13)

    $@13  go to state 159


State 156

   38 control: WHILE temp '(' el ')' $@9 sob .

    $default  reduce using rule 38 (control)


State 157

   40 control: DO temp sob WHILE '(' el ')' . $@10 ';'

    $default  reduce using rule 39 ($@10)

    $@10  go to state 160


State 158

   43 control: FOR '(' asign ';' el $@11 ';' . asign ')' $@12 sob

    ID  shift, and go to state 81

    asign  go to state 161
    ide    go to state 57


State 159

   46 control: IF '(' el ')' temp2 sob ELSE $@13 . sob

    ID     shift, and go to state 46
    IF     shift, and go to state 47
    WHILE  shift, and go to state 48
    DO     shift, and go to state 49
    FOR    shift, and go to state 50
    CIN    shift, and go to state 51
    COUT   shift, and go to state 52
    '{'    shift, and go to state 42

    bloque   go to state 96
    sob      go to state 162
    stat     go to state 98
    asign    go to state 55
    control  go to state 99
    ide      go to state 57


State 160

   40 control: DO temp sob WHILE '(' el ')' $@10 . ';'

    ';'  shift, and go to state 163


State 161

   43 control: FOR '(' asign ';' el $@11 ';' asign . ')' $@12 sob

    ')'  shift, and go to state 164


State 162

   46 control: IF '(' el ')' temp2 sob ELSE $@13 sob .

    $default  reduce using rule 46 (control)


State 163

   40 control: DO temp sob WHILE '(' el ')' $@10 ';' .

    $default  reduce using rule 40 (control)


State 164

   43 control: FOR '(' asign ';' el $@11 ';' asign ')' . $@12 sob

    $default  reduce using rule 42 ($@12)

    $@12  go to state 165


State 165

   43 control: FOR '(' asign ';' el $@11 ';' asign ')' $@12 . sob

    ID     shift, and go to state 46
    IF     shift, and go to state 47
    WHILE  shift, and go to state 48
    DO     shift, and go to state 49
    FOR    shift, and go to state 50
    CIN    shift, and go to state 51
    COUT   shift, and go to state 52
    '{'    shift, and go to state 42

    bloque   go to state 96
    sob      go to state 166
    stat     go to state 98
    asign    go to state 55
    control  go to state 99
    ide      go to state 57


State 166

   43 control: FOR '(' asign ';' el $@11 ';' asign ')' $@12 sob .

    $default  reduce using rule 43 (control)
